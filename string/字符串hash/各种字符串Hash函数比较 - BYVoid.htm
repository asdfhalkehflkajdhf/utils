<!DOCTYPE html><html><head><link rel="stylesheet" href="/css/style-882e60051fc11fd2558e888585fc3950.css" /><link rel="alternate" type="application/rss+xml" title="RSS Feed" href="/feed"><title>各种字符串Hash函数比较 - BYVoid</title><link rel="stylesheet" href="/css/zhs-378ae3a29fbe4388dfea188a7cc8f601.css" /></head><body><div id="page"><div id="page-top" class="container clearfix"><div id="pre-header"><div id="social-icons"><ul id="social-links"><li class="facebook-link"><a id="social-01" href="https://www.facebook.com/byvoid" target="_blank" original-title="Find me on Facebook" class="facebook"></a></li><li class="twitter-link"><a id="social-02" href="https://twitter.com/byvoid" target="_blank" original-title="Find me on Twitter" class="twitter"></a></li><li class="google-link"><a id="social-03" href="https://plus.google.com/+CarboKuo" target="_blank" original-title="Find me on Google +" class="google"></a></li><li class="linkedin-link"><a id="social-04" href="https://www.linkedin.com/in/byvoid" target="_blank" original-title="My resume on LinkedIn" class="linkedin"></a></li><li class="github-link"><a id="social-05" href="https://github.com/BYVoid" target="_blank" original-title="My projects on Github" class="github"></a></li><li class="renren-link"><a id="social-06" href="http://www.renren.com/byvoid" target="_blank" original-title="人人網" class="renren"></a></li><li class="weibo-link"><a id="social-07" href="http://weibo.com/byvoid" target="_blank" original-title="新浪微博" class="weibo"></a></li><li class="douban-link"><a id="social-08" href="http://www.douban.com/people/byvoid/" target="_blank" original-title="豆瓣" class="douban"></a></li><li class="rss-link"><a id="social-09" href="/feed" target="_blank" original-title="RSS feed" class="rss"></a></li></ul></div></div><header id="header" role="banner" class="clearfix"><hgroup id="logo-wrapper"><h1><a id="logo" href="/"><img src="/images/logo.png" title="Beyond the Void" width="250" height="30"/></a></h1></hgroup><div id="navigation-wrapper" class="clearfix"><nav id="main-navigation" class="main-menu"><ul id="menu-top-menu" class="sf-menu"><li class="menu-item"><a href="/blog">網誌</a></li><li class="menu-item"><a href="/blog/list">列表</a></li><li class="menu-item"><a href="/blog/tag">標籤</a></li><li class="menu-item"><a href="/project">項目</a></li><li class="menu-item"><a href="/about">關於<span class="downarrowclass"></span><span class="downarrowclass"></span></a><ul class="sub-menu"><li class="menu-item"><a href="/about/resume">Resume</a></li><li class="menu-item"><a href="/about/logo">Logo</a></li><li class="menu-item"><a href="/slides/">Slides</a></li></ul></li><li class="menu-item"><a href="/contact">聯繫</a></li></ul></nav></div></header></div><div id="content" class="container clearfix"><div class="container clearfix"><img src="/images/banner-bg-0.jpg" class="intro-img"></div><section id="content-main"><article data-post-id="blog/string-hash-compare" class="post hentry clearfix"><aside class="entry-meta"><time datetime="2008-09-28T05:08:59.000Z" class="post-date"><span class="post-month">九月</span><strong class="post-day">28</strong><span class="post-year">2008</span></time><ul><li><span class="title">作者:<author>byvoid</author></span></li><li><span class="title">閱讀: 42683</span></li><li><ul><li><a href="/blog/tag/計算機科學">計算機科學</a></li><li><a href="/blog/tag/C++">C++</a></li><li><a href="/blog/tag/字符串">字符串</a></li><li><a href="/blog/tag/哈希">哈希</a></li><li><a href="/blog/tag/比較">比較</a></li></ul></li></ul></aside><section class="entry-body entry-body-content"><header><h1><a href="/blog/string-hash-compare" data-post-id="blog/string-hash-compare" class="post_header_link">各种字符串Hash函数比较</a></h1></header><p>常用的字符串Hash函数还有ELFHash，APHash等等，都是十分简单有效的方法。这些函数使用位运算使得每一个字符都对最后的函数值产生影响。另外还有以MD5和SHA1为代表的杂凑函数，这些函数几乎不可能找到碰撞。</p>
<p>常用字符串哈希函数有BKDRHash，APHash，DJBHash，JSHash，RSHash，SDBMHash，PJWHash，ELFHash等等。对于以上几种哈希函数，我对其进行了一个小小的评测。<br />
</p>

<table border="1">
  <col width="72" span="10" />
  <tr height="19">
    <td>Hash函数</td>
    <td>数据1</td>
    <td>数据2</td>
    <td>数据3</td>
    <td>数据4</td>
    <td>数据1得分</td>
    <td>数据2得分</td>
    <td>数据3得分</td>
    <td>数据4得分</td>
    <td>平均分</td>
  </tr>
  <tr height="19">
    <td>BKDRHash</td>
    <td align="right">2</td>
    <td align="right">0</td>
    <td align="right">4774</td>
    <td align="right">481</td>
    <td align="right">96.55</td>
    <td align="right">100</td>
    <td align="right">90.95</td>
    <td align="right">82.05</td>
    <td align="right">92.64</td>
  </tr>
  <tr height="19">
    <td>APHash</td>
    <td align="right">2</td>
    <td align="right">3</td>
    <td align="right">4754</td>
    <td align="right">493</td>
    <td align="right">96.55</td>
    <td align="right">88.46</td>
    <td align="right">100</td>
    <td align="right">51.28</td>
    <td align="right">86.28</td>
  </tr>
  <tr height="19">
    <td>DJBHash</td>
    <td align="right">2</td>
    <td align="right">2</td>
    <td align="right">4975</td>
    <td align="right">474</td>
    <td align="right">96.55</td>
    <td align="right">92.31</td>
    <td align="right">0</td>
    <td align="right">100</td>
    <td align="right">83.43</td>
  </tr>
  <tr height="19">
    <td>JSHash</td>
    <td align="right">1</td>
    <td align="right">4</td>
    <td align="right">4761</td>
    <td align="right">506</td>
    <td align="right">100</td>
    <td align="right">84.62</td>
    <td align="right">96.83</td>
    <td align="right">17.95</td>
    <td align="right">81.94</td>
  </tr>
  <tr height="19">
    <td>RSHash</td>
    <td align="right">1</td>
    <td align="right">0</td>
    <td align="right">4861</td>
    <td align="right">505</td>
    <td align="right">100</td>
    <td align="right">100</td>
    <td align="right">51.58</td>
    <td align="right">20.51</td>
    <td align="right">75.96</td>
  </tr>
  <tr height="19">
    <td>SDBMHash</td>
    <td align="right">3</td>
    <td align="right">2</td>
    <td align="right">4849</td>
    <td align="right">504</td>
    <td align="right">93.1</td>
    <td align="right">92.31</td>
    <td align="right">57.01</td>
    <td align="right">23.08</td>
    <td align="right">72.41</td>
  </tr>
  <tr height="19">
    <td>PJWHash</td>
    <td align="right">30</td>
    <td align="right">26</td>
    <td align="right">4878</td>
    <td align="right">513</td>
    <td align="right">0</td>
    <td align="right">0</td>
    <td align="right">43.89</td>
    <td align="right">0</td>
    <td align="right">21.95</td>
  </tr>
  <tr height="19">
    <td>ELFHash</td>
    <td align="right">30</td>
    <td align="right">26</td>
    <td align="right">4878</td>
    <td align="right">513</td>
    <td align="right">0</td>
    <td align="right">0</td>
    <td align="right">43.89</td>
    <td align="right">0</td>
    <td align="right">21.95</td>
  </tr>
</table>

<p><p>其中数据1为100000个字母和数字组成的随机串哈希冲突个数。数据2为100000个有意义的英文句子哈希冲突个数。数据3为数据1的哈希值与1000003(大素数)求模后存储到线性表中冲突的个数。数据4为数据1的哈希值与10000019(更大素数)求模后存储到线性表中冲突的个数。</p></p>
<p><p>经过比较，得出以上平均得分。平均数为平方平均数。可以发现，BKDRHash无论是在实际效果还是编码实现中，效果都是最突出的。APHash也是较为优秀的算法。DJBHash,JSHash,RSHash与SDBMHash各有千秋。PJWHash与ELFHash效果最差，但得分相似，其算法本质是相似的。</p></p>
<p><p>在信息修竞赛中，要本着易于编码调试的原则，个人认为BKDRHash是最适合记忆和使用的。</p></p>
<p><p>BYVoid原创，欢迎建议、交流、批评和指正。</p>
附：各种哈希函数的C语言程序代码</p>
<pre><code class="cpp">unsigned int SDBMHash(char *str)
{
    unsigned int hash = 0;

    while (*str)
    {
        // equivalent to: hash = 65599*hash + (*str++);
        hash = (*str++) + (hash &lt;&lt; 6) + (hash &lt;&lt; 16) - hash;
    }

    return (hash &amp; 0x7FFFFFFF);
}

// RS Hash Function
unsigned int RSHash(char *str)
{
    unsigned int b = 378551;
    unsigned int a = 63689;
    unsigned int hash = 0;

    while (*str)
    {
        hash = hash * a + (*str++);
        a *= b;
    }

    return (hash &amp; 0x7FFFFFFF);
}

// JS Hash Function
unsigned int JSHash(char *str)
{
    unsigned int hash = 1315423911;

    while (*str)
    {
        hash ^= ((hash &lt;&lt; 5) + (*str++) + (hash &gt;&gt; 2));
    }

    return (hash &amp; 0x7FFFFFFF);
}

// P. J. Weinberger Hash Function
unsigned int PJWHash(char *str)
{
    unsigned int BitsInUnignedInt = (unsigned int)(sizeof(unsigned int) * 8);
    unsigned int ThreeQuarters    = (unsigned int)((BitsInUnignedInt  * 3) / 4);
    unsigned int OneEighth        = (unsigned int)(BitsInUnignedInt / 8);
    unsigned int HighBits         = (unsigned int)(0xFFFFFFFF) &lt;&lt; (BitsInUnignedInt - OneEighth);
    unsigned int hash             = 0;
    unsigned int test             = 0;

    while (*str)
    {
        hash = (hash &lt;&lt; OneEighth) + (*str++);
        if ((test = hash &amp; HighBits) != 0)
        {
            hash = ((hash ^ (test &gt;&gt; ThreeQuarters)) &amp; (~HighBits));
        }
    }

    return (hash &amp; 0x7FFFFFFF);
}

// ELF Hash Function
unsigned int ELFHash(char *str)
{
    unsigned int hash = 0;
    unsigned int x    = 0;

    while (*str)
    {
        hash = (hash &lt;&lt; 4) + (*str++);
        if ((x = hash &amp; 0xF0000000L) != 0)
        {
            hash ^= (x &gt;&gt; 24);
            hash &amp;= ~x;
        }
    }

    return (hash &amp; 0x7FFFFFFF);
}

// BKDR Hash Function
unsigned int BKDRHash(char *str)
{
    unsigned int seed = 131; // 31 131 1313 13131 131313 etc..
    unsigned int hash = 0;

    while (*str)
    {
        hash = hash * seed + (*str++);
    }

    return (hash &amp; 0x7FFFFFFF);
}

// DJB Hash Function
unsigned int DJBHash(char *str)
{
    unsigned int hash = 5381;

    while (*str)
    {
        hash += (hash &lt;&lt; 5) + (*str++);
    }

    return (hash &amp; 0x7FFFFFFF);
}

// AP Hash Function
unsigned int APHash(char *str)
{
    unsigned int hash = 0;
    int i;

    for (i=0; *str; i++)
    {
        if ((i &amp; 1) == 0)
        {
            hash ^= ((hash &lt;&lt; 7) ^ (*str++) ^ (hash &gt;&gt; 3));
        }
        else
        {
            hash ^= (~((hash &lt;&lt; 11) ^ (*str++) ^ (hash &gt;&gt; 5)));
        }
    }

    return (hash &amp; 0x7FFFFFFF);
}</code></pre>
<section class="social-buttons"><div data-annotation="inline" class="g-plusone"></div><div data-layout="standard" data-action="like" data-show-faces="true" data-share="true" class="fb-like"></div></section><section class="related-post"><h2>相關日誌</h2><ul><li><a href="/blog/c-string">C语言字符串函数大全</a></li><li><a href="/blog/gjqt-comment">談『古劍奇譚』</a></li><li><a href="/blog/pascaler-ignorance">Pascaler:别拿自己的无知当个性</a></li><li><a href="/blog/treap-kth">Treap 查找第K小的数</a></li><li><a href="/blog/noi2008-province-3">省队培训日志3</a></li><li><a href="/blog/treap-analysis-and-application">随机平衡二叉查找树Treap的分析与应用</a></li><li><a href="/blog/vakuum-dev-note-02">Vakuum开发笔记02 核心与安全问题</a></li><li><a href="/blog/directed-tree-bracket-sequence">有向树与树的括号序列最小表示法</a></li><li><a href="/blog/linux-cprogram-syscall">Linux下C程序启动时的系统调用</a></li><li><a href="/blog/browser-kernel">几种浏览器的内核</a></li></ul></section></section></article><div id="disqus_thread"></div></section><aside id="content-side"><div class="sidebarBox widget_search"><form id="searchform" role="search" method="get" action="https://www.google.com/cse" target="_blank"><label for="s" class="screen-reader-text">Search for:</label><input id="s" type="text" value="" name="q" placeholder="Search this site..."/><input type="hidden" name="cx" value="partner-pub-7100557222552278:h6n6am-u2fu"/><input type="hidden" name="ie" value="UTF-8"/><input name="siteurl" type="hidden" value="www.byvoid.com"/><input id="searchsubmit" type="submit" value="Search"/></form></div><div class="sidebarBox"><h4>語言</h4><ul><li><a href="/blog/string-hash-compare/">原文</a></li><li><a href="/zht/blog/string-hash-compare/">正體中文</a></li><li><a href="/zhs/blog/string-hash-compare/">簡體中文</a></li><li><a href="/en/blog/string-hash-compare/">English</a></li></ul></div><div class="sidebarBox"><h4>分類</h4><ul><li><a href="/blog/tag/中文與漢語">中文與漢語</a></li><li><a href="/blog/tag/生活點滴">生活點滴</a></li><li><a href="/blog/tag/稷下學宮">稷下學宮</a></li><li><a href="/blog/tag/精華轉載">精華轉載</a></li><li><a href="/blog/tag/自娛自樂">自娛自樂</a></li><li><a href="/blog/tag/設計開發">設計開發</a></li><li><a href="/blog/tag/點滴發現">點滴發現</a></li><li><a href="/blog/tag/計算機科學">計算機科學</a></li><li><a href="/blog/tag/競賽題解">競賽題解</a></li><li><a href="/blog/tag/競賽歷程">競賽歷程</a></li><li><a href="/blog/tag/JavaScript">JavaScript</a></li></ul></div><div class="sidebarBox"><h4>最熱門</h4><ul><li><a href="/blog/scc-tarjan">有向图强连通分量的Tarjan算法</a> - 151809</li><li><a href="/blog/recommend-rime">推薦一個神級輸入法——Rime</a> - 107780</li><li><a href="/blog/cpp-string">C++ string 用法详解</a> - 88183</li><li><a href="/blog/bh-diao-cao">避諱借字——“屌”、“肏”、“屄”</a> - 68064</li><li><a href="/blog/gjqt-plot">『古劍奇譚』劇情梗概</a> - 58381</li><li><a href="/blog/recent-one-year">這一年來</a> - 44416</li><li><a href="/blog/oversea-internship-interviews">海外實習面試記</a> - 43071</li><li><a href="/blog/string-hash-compare">各种字符串Hash函数比较</a> - 42683</li><li><a href="/blog/alibaba-interview-feedback-clarification">關於阿里巴巴面試結果信息泄漏的一點說明</a> - 42161</li><li><a href="/blog/biconnect">图的割点、桥与双连通分支</a> - 41469</li><li><a href="/blog/fast-readfile">探寻C++最快的读取文件的方案</a> - 36291</li><li><a href="/blog/http-keep-alive-header">HTTP协议头部与Keep-Alive模式详解</a> - 36186</li><li><a href="/blog/cpp-fstream">C++中fstream的用法</a> - 32386</li><li><a href="/blog/hungary">匈牙利算法</a> - 31309</li><li><a href="/blog/c-int64">C/C++的64位整型</a> - 23517</li><li><a href="/blog/kyonh">廣韻查詢系統</a> - 23256</li><li><a href="/blog/treasure-young-days">勸君惜取少年時</a> - 21144</li><li><a href="/blog/c-string">C语言字符串函数大全</a> - 20072</li><li><a href="/blog/lcs-suffix-array">最长公共子串问题的后缀数组解法</a> - 19704</li><li><a href="/blog/vim-syntex">Vim 语法高亮与自动缩进</a> - 19628</li><li><a href="/blog/lpf24-solution">线性规划与网络流24题 解题报告</a> - 19476</li><li><a href="/blog/pal5-comment">仙劍奇俠傳五破關之談</a> - 18874</li><li><a href="/blog/match-km">二分图带权匹配 KM算法与费用流模型建立</a> - 18462</li><li><a href="/blog/noip-allsolutions">NOIP2000-2007 全部题解</a> - 18133</li><li><a href="/blog/linux-ssh-wall">Linux下实现自动设置SSH代理</a> - 17853</li><li><a href="/blog/pal5q-comment">仙劍五前傳淺析</a> - 17163</li><li><a href="/blog/mandarin-altaic">普通話是胡語嗎？</a> - 16961</li><li><a href="/blog/node-child-process-ipc">Node.js中的child_process及進程通信</a> - 16540</li><li><a href="/blog/linux-c-1">Linux C语言编程学习笔记 (1)进程控制入门</a> - 16521</li><li><a href="/blog/talk-about-cina">說說「支那」</a> - 16444</li></ul></div><div class="sidebarBox"><h4>存檔</h4><ul><li><a href="/blog/archive/2014/9">2014年九月</a> (1)</li><li><a href="/blog/archive/2014/6">2014年六月</a> (3)</li><li><a href="/blog/archive/2014/5">2014年五月</a> (1)</li><li><a href="/blog/archive/2014/3">2014年三月</a> (6)</li><li><a href="/blog/archive/2014/1">2014年一月</a> (1)</li><li><a href="/blog/archive/2013/12">2013年十二月</a> (1)</li><li><a href="/blog/archive/2013/10">2013年十月</a> (1)</li><li><a href="/blog/archive/2013/6">2013年六月</a> (2)</li><li><a href="/blog/archive/2013/5">2013年五月</a> (4)</li><li><a href="/blog/archive/2013/4">2013年四月</a> (4)</li><li><a href="/blog/archive/2013/3">2013年三月</a> (2)</li><li><a href="/blog/archive/2013/2">2013年二月</a> (1)</li><li><a href="/blog/archive/2013/1">2013年一月</a> (2)</li><li><a href="/blog/archive/2012/12">2012年十二月</a> (1)</li><li><a href="/blog/archive/2012/9">2012年九月</a> (1)</li><li><a href="/blog/archive/2012/8">2012年八月</a> (2)</li><li><a href="/blog/archive/2012/7">2012年七月</a> (3)</li><li><a href="/blog/archive/2012/6">2012年六月</a> (1)</li><li><a href="/blog/archive/2012/5">2012年五月</a> (1)</li><li><a href="/blog/archive/2012/4">2012年四月</a> (2)</li><li><a href="/blog/archive/2012/3">2012年三月</a> (1)</li><li><a href="/blog/archive/2012/2">2012年二月</a> (2)</li><li><a href="/blog/archive/2012/1">2012年一月</a> (8)</li><li><a href="/blog/archive/2011/12">2011年十二月</a> (13)</li><li><a href="/blog/archive/2011/11">2011年十一月</a> (3)</li><li><a href="/blog/archive/2011/10">2011年十月</a> (2)</li><li><a href="/blog/archive/2011/9">2011年九月</a> (1)</li><li><a href="/blog/archive/2011/8">2011年八月</a> (3)</li><li><a href="/blog/archive/2011/7">2011年七月</a> (3)</li><li><a href="/blog/archive/2011/6">2011年六月</a> (6)</li><li><a href="/blog/archive/2011/5">2011年五月</a> (4)</li><li><a href="/blog/archive/2011/4">2011年四月</a> (2)</li><li><a href="/blog/archive/2011/2">2011年二月</a> (3)</li><li><a href="/blog/archive/2010/12">2010年十二月</a> (4)</li><li><a href="/blog/archive/2010/11">2010年十一月</a> (2)</li><li><a href="/blog/archive/2010/10">2010年十月</a> (3)</li><li><a href="/blog/archive/2010/9">2010年九月</a> (3)</li><li><a href="/blog/archive/2010/8">2010年八月</a> (7)</li><li><a href="/blog/archive/2010/6">2010年六月</a> (5)</li><li><a href="/blog/archive/2010/5">2010年五月</a> (11)</li><li><a href="/blog/archive/2010/4">2010年四月</a> (10)</li><li><a href="/blog/archive/2010/3">2010年三月</a> (12)</li><li><a href="/blog/archive/2010/2">2010年二月</a> (1)</li><li><a href="/blog/archive/2010/1">2010年一月</a> (10)</li><li><a href="/blog/archive/2009/12">2009年十二月</a> (5)</li><li><a href="/blog/archive/2009/11">2009年十一月</a> (11)</li><li><a href="/blog/archive/2009/10">2009年十月</a> (13)</li><li><a href="/blog/archive/2009/9">2009年九月</a> (6)</li><li><a href="/blog/archive/2009/8">2009年八月</a> (2)</li><li><a href="/blog/archive/2009/7">2009年七月</a> (9)</li><li><a href="/blog/archive/2009/6">2009年六月</a> (14)</li><li><a href="/blog/archive/2009/5">2009年五月</a> (16)</li><li><a href="/blog/archive/2009/4">2009年四月</a> (28)</li><li><a href="/blog/archive/2009/3">2009年三月</a> (21)</li><li><a href="/blog/archive/2009/2">2009年二月</a> (18)</li><li><a href="/blog/archive/2009/1">2009年一月</a> (6)</li><li><a href="/blog/archive/2008/12">2008年十二月</a> (22)</li><li><a href="/blog/archive/2008/11">2008年十一月</a> (21)</li><li><a href="/blog/archive/2008/10">2008年十月</a> (24)</li><li><a href="/blog/archive/2008/9">2008年九月</a> (6)</li><li><a href="/blog/archive/2008/8">2008年八月</a> (12)</li><li><a href="/blog/archive/2008/7">2008年七月</a> (20)</li><li><a href="/blog/archive/2008/6">2008年六月</a> (23)</li><li><a href="/blog/archive/2008/4">2008年四月</a> (29)</li><li><a href="/blog/archive/2008/3">2008年三月</a> (8)</li><li><a href="/blog/archive/2008/2">2008年二月</a> (1)</li><li><a href="/blog/archive/2008/1">2008年一月</a> (6)</li><li><a href="/blog/archive/2007/12">2007年十二月</a> (3)</li><li><a href="/blog/archive/2007/11">2007年十一月</a> (22)</li></ul></div></aside></div><footer id="footer"><div class="container clearfix"><div class="first one-fourth widget-container"><h1>Recent Posts</h1><ul><li><a href="/blog/trans-siberia-travel-notes">橫貫西伯利亞小記</a></li><li><a href="/blog/high-dimensional-world-and-unified-value">高維世界與一維價值</a></li><li><a href="/blog/discussion-on-health-care-system">誰說中國醫療差——談醫療制度</a></li><li><a href="/blog/icc-ipo-pgo">icc的過程間優化和性能分析引導優化</a></li><li><a href="/blog/dprk-nothing-to-envy-notes">朝鮮並不封閉：《我們最幸福》札記</a></li></ul></div><div class="one-fourth widget-container"><h1>Blogroll</h1><ul><li><a href="http://maskray.me/" target="_blank">MaskRay</a></li><li><a href="http://ppwwyyxx.com/" target="_blank">Yuxin's Blog</a></li><li><a href="https://blog.blahgeek.com/" target="_blank">BlahGeek</a></li><li><a href="http://yangzhe1990.wordpress.com/" target="_blank">Yangzhe1990's Blog</a></li><li><a href="http://dangfan.me/" target="_blank">Dang Fan's Blog</a></li></ul></div><div class="one-fourth widget-container"><h1>Blogroll</h1><ul><li><a href="http://www.curimit.com/blog/" target="_blank">Swj's Home</a></li><li><a href="http://www.csslayer.info/" target="_blank">CS Slayer</a></li><li><a href="http://typeof.net/" target="_blank">Typeof.net</a></li><li><a href="http://blog.henryhu.net/" target="_blank">Henry's Blog</a></li><li><a href="http://blog.sina.com.cn/ychromosome" target="_blank">polyhedron(古韻)</a></li></ul></div><div class="last one-fourth widget-container"><h1>Blogroll</h1><ul><li><a href="http://zhiqiang.org/blog/" target="_blank">閱微堂</a></li><li><a href="http://www.liyaos.com/" target="_blank">優哉幽齋</a></li><li><a href="http://www.vuryleo.com/" target="_blank">超越時空</a></li><li><a href="http://solog.me/" target="_blank">獨異誌</a></li></ul></div></div><div id="copyrights"><div class="container clearfix"><span class="right"><a href="#" class="backtotop">↑</a></span>Originally designed by Site5 WordPress Themes. BYVoid refactored with Node.js, less, jade and CoffeeScript.</div></div></footer></div><script src="/js/script-2eb9756f331990c8fb7ea44a65b0e6e9.js"></script><div id="fb-root"></div><script>(function() {
  var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
  po.src = 'https://apis.google.com/js/platform.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
})();
(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=153202208208599&version=v2.0";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script><script>var disqus_shortname = 'byvoid';
var disqus_identifier = '5a0792c6e5';
var disqus_url = location.protocol + '//' + location.host + '/' + 'blog/string-hash-compare';
var disqus_title = '各种字符串Hash函数比较';
var disqus_developer = 1;
(function() {
var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
dsq.src = 'https://' + disqus_shortname + '.disqus.com/embed.js';
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();</script><script data-no-instant>//InstantClick.init(50);</script><script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-11970228-1', 'byvoid.com');
  ga('require', 'displayfeatures');
  ga('send', 'pageview');

</script></body></html>